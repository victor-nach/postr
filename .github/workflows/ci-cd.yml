name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend (Go)
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go (adjust the go-version as needed)
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Download dependencies
      - name: Download Go dependencies
        working-directory: ./backend
        run: go mod download

      # Run tests
      - name: Run Backend Tests
        working-directory: ./backend
        run: go test ./...

  frontend:
    name: Frontend (React)
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Cache Node modules
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      # Run tests
      - name: Run Frontend Tests
        working-directory: ./frontend
        run: npm test

      # Build the frontend application
      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build
